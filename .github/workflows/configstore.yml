name: configstore
on:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tox-env:
          - py310
          - py39
          - py38
          - py37
          - coverage
          - pkg
    steps:
      - uses: actions/checkout@v2.3.5
      - name: Determine Python version
        id: get-python-version
        run: |
          echo ::set-output name=value::\
          $(jq -r '.["${{ matrix.tox-env }}"]' < .github/workflows/tox-mapping.json)
      - name: Set up Python ${{ steps.get-python-version.outputs.value }}
        uses: actions/setup-python@v2.3.0
        with:
          python-version: ${{ steps.get-python-version.outputs.value }}
      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - uses: actions/cache@v2
        with:
          path: |
            ${{ steps.pip-cache-dir.outputs.dir }}
            .tox
          key: configstore-${{ matrix.tox-env }}-v1-${{ hashFiles('pyproject.toml') }}
          restore-keys: configstore-${{ matrix.tox-env }}-v1-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Test with tox (${{ matrix.tox-env }})
        run: tox -e ${{ matrix.tox-env }}

  slack-workflow-status:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - test
    steps:
      - name: Send Slack notification
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
